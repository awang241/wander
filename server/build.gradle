plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

//group = 'com.spring-vue-gradle'
group = 'Team12'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	cucumberRuntime {
		extendsFrom testImplementation
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
	compile 'io.jsonwebtoken:jjwt-api:0.11.1'
	runtime 'io.jsonwebtoken:jjwt-impl:0.11.1',
			// Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
			//'org.bouncycastle:bcprov-jdk15on:1.60',
			'io.jsonwebtoken:jjwt-jackson:0.11.1' // or 'io.jsonwebtoken:jjwt-gson:0.11.1' for gson
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'

	testImplementation 'io.cucumber:cucumber-java:5.6.0'
	testImplementation 'io.cucumber:cucumber-junit:5.6.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.5.2'
	testImplementation 'org.hamcrest:hamcrest:2.1'
	testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

}

test {
	useJUnitPlatform()
}

// Task used for just running cucumber tests, and can specify tags with -Ptags="@sometags"
task cucumber() {
	dependsOn assemble, compileTestJava
	String selectedTags = findProperty("tags") ?: ""

	doLast {
		javaexec {
			main = "io.cucumber.core.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = [
					'--plugin', 'pretty', // How to format test report, "pretty" is good for human eyes
					'--glue', 'library_app.steps', // Where to look for your tests' steps
					'src/test/resources/library_app/features/', // Where to look for your features
					'--strict', // Causes cucumber to fail if any step definitions are still undefined
					'--tags', selectedTags // Only runs certain tagged scenarios of tags arg is given
			]
		}
	}
}